{"version":3,"sources":["/Users/swativish/neu/project/massivx-exchange/src/$_gendir lazy","/Users/swativish/neu/project/massivx-exchange/src/app/app.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/app.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/app.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/app.module.ts","/Users/swativish/neu/project/massivx-exchange/src/app/app.routing.ts","/Users/swativish/neu/project/massivx-exchange/src/app/components/admin-user-list/admin-user-list.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/components/admin-user-list/admin-user-list.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/components/admin-user-list/admin-user-list.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/components/admin/admin-user-update/admin-user-update.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/components/admin/admin-user-update/admin-user-update.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/components/admin/admin-user-update/admin-user-update.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/components/api-test/api-test.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/components/api-test/api-test.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/components/api-test/api-test.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/components/create-user/create-user.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/components/create-user/create-user.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/components/create-user/create-user.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/components/home/home.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/components/home/home.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/components/home/home.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/components/massivx/massivx.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/components/massivx/massivx.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/components/massivx/massivx.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/components/test/test.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/components/test/test.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/components/test/test.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/components/user/login/login.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/components/user/login/login.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/components/user/login/login.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/components/user/profile/profile.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/components/user/profile/profile.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/components/user/profile/profile.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/components/user/register/register.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/components/user/register/register.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/components/user/register/register.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/components/wallet-list/wallet-list.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/components/wallet-list/wallet-list.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/components/wallet-list/wallet-list.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/components/wallet/wallet.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/components/wallet/wallet.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/components/wallet/wallet.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/components/website/website-list/website-list.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/components/website/website-list/website-list.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/components/website/website-list/website-list.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/services/admin.service.client.ts","/Users/swativish/neu/project/massivx-exchange/src/app/services/authentication.service.client.ts","/Users/swativish/neu/project/massivx-exchange/src/app/services/bittrex.service.client.ts","/Users/swativish/neu/project/massivx-exchange/src/app/services/shared.service.client.ts","/Users/swativish/neu/project/massivx-exchange/src/app/services/test.service.client.ts","/Users/swativish/neu/project/massivx-exchange/src/app/services/todo.service.client.ts","/Users/swativish/neu/project/massivx-exchange/src/app/services/user.service.client.ts","/Users/swativish/neu/project/massivx-exchange/src/app/services/wallet.service.client.ts","/Users/swativish/neu/project/massivx-exchange/src/app/services/website.mock.client.ts","/Users/swativish/neu/project/massivx-exchange/src/app/services/website.service.client.ts","/Users/swativish/neu/project/massivx-exchange/src/app/todo-list/todo-edit.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/todo-list/todo-edit.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/todo-list/todo-list.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/todo-list/todo-list.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/todo-list/todo-mock.ts","/Users/swativish/neu/project/massivx-exchange/src/app/todo-list/todo2.ts","/Users/swativish/neu/project/massivx-exchange/src/app/todo/todo.component.css","/Users/swativish/neu/project/massivx-exchange/src/app/todo/todo.component.html","/Users/swativish/neu/project/massivx-exchange/src/app/todo/todo.component.ts","/Users/swativish/neu/project/massivx-exchange/src/app/todo/todo.ts","/Users/swativish/neu/project/massivx-exchange/src/environments/environment.ts","/Users/swativish/neu/project/massivx-exchange/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  // template: `<router-outlet></router-outlet>`,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { TestComponent } from './components/test/test.component';\nimport {Routing} from './app.routing';\nimport {HttpModule} from '@angular/http';\nimport {FormsModule} from '@angular/forms';\nimport {TestService} from './services/test.service.client';\nimport { TodoComponent } from './todo/todo.component';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { TodoEditComponent } from './todo-list/todo-edit.component';\nimport {TodoService} from './services/todo.service.client';\nimport { WebsiteListComponent } from './components/website/website-list/website-list.component';\nimport {WebsiteService} from './services/website.service.client';\nimport {BittrexService} from './services/bittrex.service.client';\nimport { ApiTestComponent } from './components/api-test/api-test.component';\nimport { WalletComponent } from './components/wallet/wallet.component';\nimport {WalletService} from './services/wallet.service.client';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { ProfileComponent } from './components/user/profile/profile.component';\nimport { RegisterComponent } from './components/user/register/register.component';\nimport {UserService} from './services/user.service.client';\nimport {SharedService} from './services/shared.service.client';\nimport { AdminUserListComponent } from './components/admin-user-list/admin-user-list.component';\nimport {AdminServiceClient} from './services/admin.service.client';\nimport {AuthenticationService} from './services/authentication.service.client';\nimport { MassivxComponent } from './components/massivx/massivx.component';\nimport { WalletListComponent } from './components/wallet-list/wallet-list.component';\nimport { CreateUserComponent } from './components/create-user/create-user.component';\nimport { AdminUserUpdateComponent } from './components/admin/admin-user-update/admin-user-update.component';\n\n@NgModule({\n  // Declare components here\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    TestComponent,\n    TodoComponent,\n    TodoListComponent,\n    TodoEditComponent,\n    WebsiteListComponent,\n    ApiTestComponent,\n    WalletComponent,\n    LoginComponent,\n    ProfileComponent,\n    RegisterComponent,\n    AdminUserListComponent,\n    MassivxComponent,\n    WalletListComponent,\n    CreateUserComponent,\n    AdminUserUpdateComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    Routing\n  ],\n  // Client Side services here\n  providers: [ TestService,\n    TodoService,\n    SharedService,\n    UserService,\n    WebsiteService,\n    BittrexService,\n    WalletService,\n    AdminServiceClient,\n    AuthenticationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/app.module.ts","\nimport {Routes, RouterModule} from '@angular/router';\nimport {HomeComponent} from './components/home/home.component';\nimport {ModuleWithProviders} from '@angular/core';\nimport {TestComponent} from './components/test/test.component';\nimport {TodoComponent} from './todo/todo.component';\nimport {TodoListComponent} from './todo-list/todo-list.component';\nimport {WebsiteListComponent} from './components/website/website-list/website-list.component';\nimport {ApiTestComponent} from './components/api-test/api-test.component';\nimport {WalletComponent} from './components/wallet/wallet.component';\nimport {LoginComponent} from './components/user/login/login.component';\nimport {RegisterComponent} from './components/user/register/register.component';\nimport {ProfileComponent} from './components/user/profile/profile.component';\nimport {AdminUserListComponent} from './components/admin-user-list/admin-user-list.component';\nimport {AdminServiceClient} from './services/admin.service.client';\nimport {AuthenticationService} from './services/authentication.service.client';\nimport {MassivxComponent} from './components/massivx/massivx.component';\nimport {WalletListComponent} from './components/wallet-list/wallet-list.component';\nimport {CreateUserComponent} from './components/create-user/create-user.component';\nimport {AdminUserUpdateComponent} from './components/admin/admin-user-update/admin-user-update.component';\n\nconst APP_ROUTES: Routes = [\n  {path: '', component : HomeComponent},\n  {path: 'home', component : HomeComponent},\n  {path: 'login', component : LoginComponent},\n  {path: 'register', component : RegisterComponent},\n  {path: 'user/:userId', component: MassivxComponent, canActivate: [AuthenticationService]},\n  {path: 'user/:userId/profile', component: ProfileComponent, canActivate: [AuthenticationService]},\n  {path: 'todo', component : TodoComponent},\n  {path: 'todoList', component : TodoListComponent},\n  {path: 'test', component: TestComponent},\n  {path: 'website', component: WebsiteListComponent},\n  {path: 'apitest', component: ApiTestComponent},\n  {path: 'user/:userId/createwallet', component: WalletComponent},\n  {path: 'user/:userId/wallet', component: WalletListComponent},\n  {path: 'user/:userId/admin/user', component: AdminUserListComponent, canActivate: [AdminServiceClient] },\n  {path: 'user/:userId/admin/newuser', component: CreateUserComponent, canActivate: [AdminServiceClient] },\n  {path: 'user/:userId/admin/updateuser/:exuserId/profile', component: AdminUserUpdateComponent, canActivate: [AdminServiceClient]}\n];\n\n// Export the routes as module providers\nexport const Routing: ModuleWithProviders = RouterModule.forRoot(APP_ROUTES);\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/app.routing.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/admin-user-list/admin-user-list.component.css\n// module id = ../../../../../src/app/components/admin-user-list/admin-user-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <nav class=\\\"navbar navbar-custom navbar-fixed-top\\\">\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"navbar-brand col-sm-1 col-md-1 col-lg-1\\\">\\n        <a [routerLink]=\\\"['/user', userId]\\\"\\n           class=\\\"pull-left my-white-color\\\">\\n          <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n        </a>\\n      </div>\\n\\n      <div class=\\\"navbar-brand my-white-color col-sm-11 col-md-11 col-lg-11\\\">\\n        User List\\n      </div>\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"my-container\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li *ngFor=\\\"let user of users\\\"\\n          class=\\\"list-group-custom-item\\\">\\n        {{user.username}}\\n        <a class=\\\"pull-right\\\"\\n           [routerLink]=\\\"['/user', userId, 'admin', 'updateuser', user._id, 'profile']\\\">\\n          <span class=\\\"glyphicon glyphicon-cog\\\"></span>\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n\\n  <nav class=\\\"navbar navbar-custom navbar-fixed-bottom\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <p class=\\\"navbar-text pull-right\\\">\\n        <a [routerLink]=\\\"['/user', userId, 'profile']\\\">\\n          <span class=\\\"glyphicon glyphicon-user my-white-color\\\"></span>\\n        </a>\\n      </p>\\n    </div>\\n  </nav>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/admin-user-list/admin-user-list.component.html\n// module id = ../../../../../src/app/components/admin-user-list/admin-user-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../../services/user.service.client';\nimport {User} from '../model/user.model.client';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-admin-user-list',\n  templateUrl: './admin-user-list.component.html',\n  styleUrls: ['./admin-user-list.component.css']\n})\nexport class AdminUserListComponent implements OnInit {\n\n  userId: String;\n  users: User[];\n  constructor(private userService: UserService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['userId']) {\n        this.userId = params['userId'];\n      }\n    });\n\n    this.userService\n      .findAllUsers(this.userId)\n      .subscribe((users: User[]) => {\n        this.users = users;\n      });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/admin-user-list/admin-user-list.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/admin/admin-user-update/admin-user-update.component.css\n// module id = ../../../../../src/app/components/admin/admin-user-update/admin-user-update.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n\\n  <nav class=\\\"navbar navbar-custom navbar-fixed-top\\\">\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"navbar-brand col-sm-1 col-md-1 col-lg-1\\\">\\n        <a [routerLink]=\\\"['/user', userId, 'admin', 'user']\\\"\\n           class=\\\"pull-left my-white-color\\\">\\n          <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n        </a>\\n      </div>\\n\\n      <div class=\\\"navbar-brand my-white-color col-sm-2 col-md-2 col-lg-2\\\">\\n        Update User\\n      </div>\\n      <div class=\\\"navbar-brand col-sm-9 col-md-9 col-lg-9\\\">\\n        <a (click)=\\\"updateUser()\\\"\\n           class=\\\"pull-right my-white-color\\\">\\n          <span class=\\\"glyphicon glyphicon-ok my-white-color\\\"></span>\\n        </a>\\n      </div>\\n\\n\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"container my-container\\\">\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"username\\\">Username</label>\\n      <input [(ngModel)]=\\\"username\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"username\\\"\\n             placeholder=\\\"ssoni\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email address</label>\\n      <input [(ngModel)]=\\\"email\\\"\\n             type=\\\"email\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"email\\\"\\n             placeholder=\\\"soni.swati@outlook.com\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"first-name\\\">First Name</label>\\n      <input [(ngModel)]=\\\"firstName\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"first-name\\\"\\n             placeholder=\\\"Swati\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"last-name\\\">Last Name</label>\\n      <input [(ngModel)]=\\\"lastName\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"last-name\\\"\\n             placeholder=\\\"Soni\\\">\\n    </div>\\n\\n    <a class=\\\"btn btn-danger btn-block\\\"\\n       (click)=\\\"deleteUser()\\\">Delete Account</a>\\n\\n  </div>\\n\\n  <nav class=\\\"navbar navbar-custom navbar-fixed-bottom\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <p class=\\\"navbar-text pull-right\\\">\\n        <a [routerLink]=\\\"['/user', userId, 'profile']\\\">>\\n          <span class=\\\"glyphicon glyphicon-user my-white-color\\\"></span>\\n        </a>\\n      </p>\\n    </div>\\n  </nav>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/admin/admin-user-update/admin-user-update.component.html\n// module id = ../../../../../src/app/components/admin/admin-user-update/admin-user-update.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {User} from '../../model/user.model.client';\nimport {UserService} from '../../../services/user.service.client';\nimport {SharedService} from '../../../services/shared.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-admin-user-update',\n  templateUrl: './admin-user-update.component.html',\n  styleUrls: ['./admin-user-update.component.css']\n})\nexport class AdminUserUpdateComponent implements OnInit {\n  userId: String;\n  username: String;\n  firstName: String;\n  lastName: String;\n  password: String;\n  user: User;\n  email: String;\n  roles: String[];\n  isAdmin: boolean;\n  exuserId: String;\n  exuser: User;\n  errorFlag: boolean;\n  errorMsg = 'Invalid username or password!';\n\n  constructor(private userService: UserService,\n              private sharedService: SharedService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['userId']) {\n        this.userId = params['userId'];\n      }\n      if (params['exuserId']) {\n        this.exuserId = params['exuserId'];\n      }\n    });\n\n    this.getUser();\n    this.getExUser();\n  }\n\n  getUser() {\n    this.userService.findUserById(this.userId)\n      .subscribe(\n        (currentUser: User) => {\n          this.user = currentUser;\n        }\n      );\n  }\n  getExUser() {\n    this.userService.findUserById(this.exuserId)\n      .subscribe(\n        (currentUser: User) => {\n          this.exuser = currentUser;\n          this.username = currentUser.username;\n          this.firstName = currentUser.firstName;\n          this.lastName = currentUser.lastName;\n          this.email = currentUser.email;\n          this.roles = currentUser.roles;\n          this.isAdmin = this.getRole();\n        }\n      );\n  }\n\n  getRole() {\n    for (let role of this.roles) {\n      if (role === 'ADMIN') {\n        return true;\n      }\n      return false;\n    }\n  }\n\n  updateUser() {\n    this.exuser.username = this.username;\n    this.exuser.firstName = this.firstName;\n    this.exuser.lastName = this.lastName;\n    this.exuser.email = this.email;\n    this.userService.updateExUser(this.exuserId, this.userId, this.exuser)\n      .subscribe(\n        (data: User) => {\n          this.router.navigate(['/user', this.userId, 'admin', 'user']);\n        }\n      );\n  }\n\n  deleteUser() {\n    this.userService.deleteExUser(this.exuserId, this.userId)\n      .subscribe(\n        (data: any) => {\n          this.router.navigate(['/user', this.userId, 'admin', 'user']);\n        }\n      );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/admin/admin-user-update/admin-user-update.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"div#crypto-container {\\n  background: white;\\n  width: 70%;\\n  margin-top: 30px;\\n  margin: 0 auto 4px auto;\\n  padding: 1em;\\n  box-shadow: 1px 1px 0 lightgrey;\\n}\\n\\nspan.left {\\n  font-weight: bold;\\n}\\n\\nspan.right {\\n  float: right;\\n}\\n\\nspan.rightest {\\n  float: right;\\n  margin-left: 10px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/api-test/api-test.component.css\n// module id = ../../../../../src/app/components/api-test/api-test.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n\\n  <nav class=\\\"navbar navbar-custom navbar-fixed-top\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-1 col-md-1 col-lg-1\\\">\\n        <a [routerLink]=\\\"['/home']\\\"\\n           class=\\\"navbar-brand pull-left my-white-color\\\">\\n          <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n        </a>\\n      </div>\\n\\n      <div class=\\\"navbar-brand my-white-color col-sm-11 col-md-11 col-lg-11\\\">\\n        Market Rate\\n      </div>\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"my-container\\\">\\n    <div class=\\\"row input-group\\\">\\n      <input [(ngModel)]=\\\"searchText\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             placeholder=\\\"Search rate of coins in USD. Enter coin name. Example: BTC,LTC\\\"\\n             autofocus>\\n      <span class=\\\"input-group-btn\\\">\\n         <a (click)=\\\"searchCrypto()\\\"\\n            class=\\\"btn btn-default\\\"\\n            type=\\\"button\\\">\\n             <span class=\\\"glyphicon glyphicon-search\\\"></span>\\n         </a>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"cryptos\\\">\\n      <div id=\\\"crypto-container\\\" *ngFor=\\\"let crypto of objectKeys(cryptos)\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n            <span class=\\\"left\\\">{{crypto}}</span>\\n          </div>\\n\\n          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n            <span>{{cryptos[crypto].USD | currency:'USD':true}}</span>\\n          </div>\\n          <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n            <span>{{cryptos[crypto].INR | currency:'INR':true}}</span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <nav class=\\\"navbar navbar-custom navbar-fixed-bottom\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <p class=\\\"navbar-text pull-right\\\">\\n          <a [routerLink]=\\\"['/profile']\\\">\\n            <span class=\\\"glyphicon glyphicon-user my-white-color\\\"></span>\\n          </a>\\n        </p>\\n\\n      </div>\\n    </nav>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/api-test/api-test.component.html\n// module id = ../../../../../src/app/components/api-test/api-test.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {BittrexService} from '../../services/bittrex.service.client';\n\n@Component({\n  selector: 'app-api-test',\n  templateUrl: './api-test.component.html',\n  styleUrls: ['./api-test.component.css']\n})\nexport class ApiTestComponent implements OnInit {\n  searchText: String;\n  objectKeys = Object.keys;\n  cryptos: any;\n  constructor(private data: BittrexService){\n\n  }\n\n  ngOnInit() {\n  }\n\n  searchCrypto() {\n    this.data.getPrices(this.searchText)\n      .subscribe(res => {\n        this.cryptos = res;\n        console.log(res);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/api-test/api-test.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/create-user/create-user.component.css\n// module id = ../../../../../src/app/components/create-user/create-user.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <nav class=\\\"navbar navbar-custom navbar-fixed-top\\\">\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"navbar-brand col-sm-1 col-md-1 col-lg-1\\\">\\n        <a [routerLink]=\\\"['/user', userId, '/profile']\\\"\\n           class=\\\"pull-left my-white-color\\\">\\n          <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n        </a>\\n      </div>\\n\\n      <div class=\\\"navbar-brand my-white-color col-sm-11 col-md-11 col-lg-11\\\">\\n        Create New User\\n      </div>\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"container\\\">\\n\\n    <div *ngIf=\\\"errorFlag\\\"\\n         class=\\\"alert alert-danger\\\">\\n      {{errorMsg}}\\n    </div>\\n\\n    <h1>Register</h1>\\n    <form (ngSubmit) = \\\"register()\\\" #f=\\\"ngForm\\\">\\n\\n      <input placeholder=\\\"username\\\"\\n             name=\\\"username\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             ngModel\\n             required\\n             #username=\\\"ngModel\\\"/>\\n\\n      <span class=\\\"help-block\\\" *ngIf=\\\"!username.valid && username.touched\\\">Please enter username!</span>\\n\\n      <input name=\\\"password\\\"\\n             placeholder=\\\"password\\\"\\n             type=\\\"password\\\"\\n             class=\\\"form-control\\\"\\n             ngModel\\n             required\\n             #password=\\\"ngModel\\\"/>\\n      <span class=\\\"help-block\\\" *ngIf=\\\"!password.valid && password.touched\\\">Please enter password!</span>\\n\\n\\n      <input name = \\\"verifyPassword\\\"\\n             placeholder=\\\"verify password\\\"\\n             type=\\\"password\\\"\\n             class=\\\"form-control\\\"\\n             ngModel\\n             required\\n             #verifyPassword=\\\"ngModel\\\"/>\\n      <span class=\\\"help-block\\\" *ngIf=\\\"!verifyPassword.valid && verifyPassword.touched\\\">Please verify password!</span>\\n\\n      <select class=\\\"form-control\\\"\\n              ngModel\\n              name=\\\"roles\\\"\\n              #role=\\\"ngModel\\\">\\n        <option value=\\\"EXCHANGEUSER\\\">EXCHANGEUSER</option>\\n        <option value=\\\"SUPPORTUSER\\\">SUPPORTUSER</option>\\n      </select>\\n\\n      <button class=\\\"btn btn-primary btn-block\\\"\\n              type=\\\"submit\\\"\\n              [disabled]=\\\"!f.valid\\\">Register</button>\\n\\n\\n      <button class=\\\"btn btn-danger btn-block\\\"\\n              type=\\\"button\\\"\\n              (click)=\\\"cancel()\\\">Cancel</button>\\n\\n    </form>\\n\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/create-user/create-user.component.html\n// module id = ../../../../../src/app/components/create-user/create-user.component.html\n// module chunks = main","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../services/shared.service.client';\nimport {NgForm} from '@angular/forms';\nimport {User} from '../model/user.model.client';\nimport {UserService} from '../../services/user.service.client';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n  @ViewChild('f') registerForm: NgForm;\n  userId: String;\n  user: User;\n  username: String;\n  firstName: String;\n  lastName: String;\n  password: String;\n  verifyPassword: String;\n  email: String;\n  errorFlag: boolean;\n  roles: String[];\n  isAdmin: boolean;\n  role: String;\n  errorMsg = 'Password does not match';\n  alreadyExistsFlag: boolean;\n  alreadyExistsMsg = 'User already exists';\n  constructor( private userService: UserService,\n               private route: ActivatedRoute,\n               private router: Router,\n               private sharedService: SharedService) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['userId']) {\n        this.userId = params['userId'];\n      }\n    });\n  }\n\n  register() {\n    this.errorFlag = false;\n    this.username = this.registerForm.value.username;\n    this.password = this.registerForm.value.password;\n    this.verifyPassword = this.registerForm.value.verifyPassword;\n    this.role = this.registerForm.value.role;\n    if (this.password !== this.verifyPassword) {\n      this.errorFlag = true;\n      return;\n    }\n    const newUser = {\n      username: this.username,\n      password: this.password,\n      roles: this.role\n    };\n    this.userService\n      .createNewUser(this.userId, newUser)\n      .subscribe((user) => {\n        this.router.navigate(['/user', this.userId , 'admin', 'user']);\n      });\n  }\n\n  cancel() {\n    this.router.navigate(['/user', this.userId]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/create-user/create-user.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".scene {\\n  background-color: black;\\n  width:100%;\\n  height: 100%;\\n  position: fixed;\\n  top:0px;\\n  left:0px;\\n  z-index:1000;\\n}\\n\\n.textscene {\\n  color: white;\\n  text-align: center;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid scene\\\">\\n\\n  <div class=\\\"my-container textscene\\\" >\\n    <div class=\\\"row\\\">\\n      <h1>MASSIVX</h1>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"my-container textscene\\\">\\n    <div class=\\\"row\\\">\\n      <p>MassivX, a web application, is a cryptocurrency exchange platform that allows the exchange of one type of cryptocurrency into other. With a simple register and secured login process, a user will be able to easily trade any leading blockchain asset for other.</p>\\n    </div>\\n\\n    <div class=\\\"row textscene\\\">\\n      <h4>\\n        <a routerLink=\\\"/apitest\\\">Search Market Rate</a>\\n      </h4>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <h4>\\n        <a routerLink=\\\"/login\\\">Login</a>\\n      </h4>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/massivx/massivx.component.css\n// module id = ../../../../../src/app/components/massivx/massivx.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <nav class=\\\"navbar navbar-custom navbar-fixed-top\\\">\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"navbar-brand my-white-color col-sm-3 col-md-3 col-lg-3\\\">\\n        MassivX\\n      </div>\\n\\n      <div class=\\\"navbar-brand col-sm-5 col-md-5 col-lg-5\\\">\\n        <a [routerLink]=\\\"['/user', userId,'createwallet']\\\"\\n           class=\\\"btn btn-success pull-right my-white-color\\\">\\n          Create Wallet\\n        </a>\\n      </div>\\n\\n      <div class=\\\"navbar-brand pull-right my-white-color col-sm-3 col-md-3 col-lg-3\\\">\\n        <a [routerLink]=\\\"['/user', userId,'wallet']\\\"\\n           class=\\\"btn btn-success pull-right my-white-color\\\">\\n          My Wallets\\n        </a>\\n      </div>\\n\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"my-container\\\">\\n\\n    <div class=\\\"my-container row\\\">\\n\\n      <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n        <input [(ngModel)]=\\\"amount\\\"\\n               type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               id=\\\"amount\\\"\\n               placeholder=\\\"YOU HAVE\\\"/>\\n      </div>\\n\\n      <div class=\\\"col-sm-1 col-md-1 col-lg-1\\\">\\n        <select>\\n          <option *ngFor=\\\"let currency of currencies\\\"\\n          value=\\\"{{currency}}\\\">\\n            {{currency}}\\n          </option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\">\\n        <input [(ngModel)]=\\\"exchange\\\"\\n               type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               id=\\\"exchange\\\"\\n               placeholder=\\\"YOU GET\\\"/>\\n      </div>\\n\\n      <div class=\\\"col-sm-1 col-md-1 col-lg-1\\\">\\n        <select>\\n          <option *ngFor=\\\"let currency of currencies\\\"\\n                  value=\\\"{{currency}}\\\">\\n            {{currency}}\\n          </option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\">\\n        <a (click)=\\\"exchange()\\\"\\n           class=\\\"btn btn-success btn-block\\\">Exchange</a>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n  <nav class=\\\"navbar navbar-custom navbar-fixed-bottom\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <p class=\\\"navbar-text pull-right\\\">\\n        <a [routerLink]=\\\"['/user', userId, 'profile']\\\">\\n          <span class=\\\"glyphicon glyphicon-user my-white-color\\\"></span>\\n        </a>\\n      </p>\\n    </div>\\n  </nav>\\n\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/massivx/massivx.component.html\n// module id = ../../../../../src/app/components/massivx/massivx.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {User} from '../model/user.model.client';\nimport {UserService} from '../../services/user.service.client';\nimport {SharedService} from '../../services/shared.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-massivx',\n  templateUrl: './massivx.component.html',\n  styleUrls: ['./massivx.component.css']\n})\nexport class MassivxComponent implements OnInit {\n\n  userId: String;\n  username: String;\n  firstName: String;\n  lastName: String;\n  password: String;\n  user: User;\n  email: String;\n  roles: String[];\n  isAdmin: boolean;\n\n  constructor(private userService: UserService,\n              private sharedService: SharedService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['userId']) {\n        this.userId = params['userId'];\n      }\n    });\n\n    this.getUser();\n  }\n\n  getUser() {\n    this.userService.findUserById(this.userId)\n      .subscribe(\n        (currentUser: User) => {\n          this.user = currentUser;\n          this.username = currentUser.username;\n          this.firstName = currentUser.firstName;\n          this.lastName = currentUser.lastName;\n          this.email = currentUser.email;\n          this.roles = currentUser.roles;\n          this.isAdmin = this.getRole();\n        }\n      );\n  }\n\n  getRole() {\n    for(let role of this.roles) {\n      if(role === 'ADMIN') {\n        return true;\n      }\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/massivx/massivx.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/test/test.component.css\n// module id = ../../../../../src/app/components/test/test.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"container\\\">\\n\\n  <h1>Test</h1>\\n\\n  <div *ngIf=\\\"alertMessage\\\"\\n       class=\\\"alert alert-danger\\\">\\n    \\\"Failed to create\\\"\\n  </div>\\n\\n  <div *ngIf=\\\"successMessage\\\"\\n       class=\\\"alert alert-success\\\">\\n    \\\"Succesfully created/deleted\\\"\\n  </div>\\n\\n  <table class=\\\"table\\\">\\n    <thead>\\n    <tr>\\n      <th>Test Message</th>\\n      <th>&nbsp;</th>\\n    </tr>\\n\\n\\n    <tr>\\n      <td>\\n        <input [(ngModel)]=\\\"message\\\"\\n               placeholder=\\\"message\\\"\\n               class=\\\"form-control\\\"/>\\n      </td>\\n\\n\\n      <td>\\n        <button (click)=\\\"createMessage()\\\"\\n                class=\\\"btn btn-primary pull-right\\\">\\n          <span class=\\\"glyphicon glyphicon-plus\\\"></span>\\n        </button>\\n      </td>\\n    </tr>\\n    </thead>\\n\\n\\n    <tbody>\\n    <tr *ngFor=\\\"let message of messages\\\">\\n      <td>\\n        {{message.message}}\\n      </td>\\n      <td>\\n        <button (click)=\\\"deleteMessage(message._id)\\\"\\n                class=\\\"btn btn-danger pull-right\\\">\\n          <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\n        </button>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/test/test.component.html\n// module id = ../../../../../src/app/components/test/test.component.html\n// module chunks = main","import { Component, OnInit, Injectable } from '@angular/core';\nimport {TestService} from '../../services/test.service.client';\n\n\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n  constructor(private _testService: TestService) { }\n\n\n  alertMessage: Boolean = false;\n  successMessage: Boolean = false;\n  message: String;\n  messages: any[] = [];\n  ngOnInit() {\n    this.findAllMessages();\n  }\n  findAllMessages() {\n    return this._testService.findAllMessages()\n      .subscribe(\n        (data: any) => {\n          this.messages = data;\n        }\n      );\n  }\n  createMessage() {\n    return this._testService.createMessage(this.message)\n      .subscribe(\n        (data: any) => {\n          this.successMessage = true;\n          this.ngOnInit();\n          this.message = null;\n        }\n      );\n  }\n  deleteMessage(messageId) {\n    return this._testService.deleteMessage(messageId)\n      .subscribe(\n        (data: any) => {\n          this.successMessage = true;\n          this.ngOnInit();\n        }\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/test/test.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/user/login/login.component.css\n// module id = ../../../../../src/app/components/user/login/login.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"container\\\">\\n  <a routerLink=\\\"/test\\\">Test</a>\\n  <a href=\\\"https://github.com/ssoni28/massivx-exchange/\\\">GitHub</a>\\n  <br/>\\n  <a href=\\\"https://massivx-exchange.herokuapp.com/\\\">Heroku</a>\\n\\n  <div *ngIf=\\\"errorFlag\\\"\\n       class=\\\"alert alert-danger custom-style\\\">\\n    {{errorMsg}}\\n  </div>\\n\\n  <h1>Login</h1>\\n\\n  <form (ngSubmit) = \\\"login()\\\" #f=\\\"ngForm\\\">\\n\\n    <input   placeholder=\\\"username\\\"\\n             name=\\\"username\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             ngModel\\n             required\\n             #username=\\\"ngModel\\\"/>\\n    <span class=\\\"help-block\\\" *ngIf=\\\"!username.valid && username.touched\\\">Please enter username!</span>\\n\\n\\n    <input   placeholder=\\\"password\\\"\\n             name=\\\"password\\\"\\n             type=\\\"password\\\"\\n             class=\\\"form-control\\\"\\n             ngModel\\n             required\\n             #password=\\\"ngModel\\\"/>\\n    <span class=\\\"help-block\\\" *ngIf=\\\"!password.valid && password.touched\\\">Please enter password!</span>\\n\\n\\n    <button class=\\\"btn btn-primary btn-block\\\"\\n            type=\\\"submit\\\"\\n            [disabled]=\\\"!f.valid\\\">Login</button>\\n\\n    <button class=\\\"btn btn-success btn-block\\\"\\n            type=\\\"button\\\"\\n            [routerLink]=\\\"['/register']\\\">Register</button>\\n\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/user/login/login.component.html\n// module id = ../../../../../src/app/components/user/login/login.component.html\n// module chunks = main","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {UserService} from '../../../services/user.service.client';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  @ViewChild('f') loginForm: NgForm;\n  username: String;\n  password: String;\n  errorFlag: boolean;\n  errorMsg = 'Invalid username or password';\n\n  constructor(private router: Router,\n              private userService: UserService,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.errorFlag = false;\n  }\n\n  login() {\n    // fetching data from loginForm\n    this.username = this.loginForm.value.username;\n    this.password = this.loginForm.value.password;\n\n    // calling client side userservice to send login information\n    console.log('data', this.username);\n    this.userService.login(this.username, this.password)\n      .subscribe(\n        (data: any) => {\n          this.sharedService.user = data;\n          this.router.navigate(['/user', data._id]);\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/user/login/login.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/user/profile/profile.component.css\n// module id = ../../../../../src/app/components/user/profile/profile.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n\\n  <nav class=\\\"navbar navbar-custom navbar-fixed-top\\\">\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"navbar-brand col-sm-1 col-md-1 col-lg-1\\\">\\n        <a [routerLink]=\\\"['/user', userId]\\\"\\n           class=\\\"pull-left my-white-color\\\">\\n          <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n        </a>\\n      </div>\\n\\n      <div class=\\\"navbar-brand my-white-color col-sm-2 col-md-2 col-lg-2\\\">\\n        Profile\\n      </div>\\n      <div class=\\\"navbar-brand col-sm-9 col-md-9 col-lg-9\\\">\\n        <a (click)=\\\"updateUser()\\\"\\n           class=\\\"pull-right my-white-color\\\">\\n          <span class=\\\"glyphicon glyphicon-ok my-white-color\\\"></span>\\n        </a>\\n      </div>\\n\\n\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"container my-container\\\">\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"username\\\">Username</label>\\n      <input [(ngModel)]=\\\"username\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"username\\\"\\n             placeholder=\\\"ssoni\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email address</label>\\n      <input [(ngModel)]=\\\"email\\\"\\n             type=\\\"email\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"email\\\"\\n             placeholder=\\\"soni.swati@outlook.com\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"first-name\\\">First Name</label>\\n      <input [(ngModel)]=\\\"firstName\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"first-name\\\"\\n             placeholder=\\\"Swati\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"last-name\\\">Last Name</label>\\n      <input [(ngModel)]=\\\"lastName\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"last-name\\\"\\n             placeholder=\\\"Soni\\\">\\n    </div>\\n\\n    <a (click)=\\\"logout()\\\"\\n       class=\\\"btn btn-danger btn-block \\\">Logout</a>\\n\\n    <a class=\\\"btn btn-danger btn-block\\\"\\n       (click)=\\\"deleteUser()\\\">Delete Account</a>\\n\\n    <div class=\\\"my-container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n          <a [routerLink]=\\\"['/user', userId, 'admin', 'user']\\\"\\n             [hidden]=!isAdmin>\\n            Users\\n          </a>\\n        </div>\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n          <a [routerLink]=\\\"['/user', userId, 'admin', 'newuser']\\\"\\n             [hidden]=!isAdmin>\\n            New User\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <nav class=\\\"navbar navbar-custom navbar-fixed-bottom\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <p class=\\\"navbar-text pull-right\\\">\\n        <a [routerLink]=\\\"['/user', userId, 'profile']\\\">\\n          <span class=\\\"glyphicon glyphicon-user my-white-color\\\"></span>\\n        </a>\\n      </p>\\n    </div>\\n  </nav>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/user/profile/profile.component.html\n// module id = ../../../../../src/app/components/user/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport 'rxjs/Rx';\nimport {UserService} from '../../../services/user.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\nimport {User} from '../../model/user.model.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  userId: String;\n  username: String;\n  firstName: String;\n  lastName: String;\n  password: String;\n  user: User;\n  email: String;\n  roles: String[];\n  isAdmin: boolean;\n  errorFlag: boolean;\n  errorMsg = 'Invalid username or password!';\n  constructor(\n    private userService: UserService,\n    private sharedService: SharedService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['userId']) {\n        this.userId = params['userId'];\n      }\n    });\n\n    this.getUser();\n  }\n\n  getUser() {\n    this.userService.findUserById(this.userId)\n      .subscribe(\n        (currentUser: User) => {\n          this.user = currentUser;\n          this.username = currentUser.username;\n          this.firstName = currentUser.firstName;\n          this.lastName = currentUser.lastName;\n          this.email = currentUser.email;\n          this.roles = currentUser.roles;\n          this.isAdmin = this.getRole();\n        }\n      );\n  }\n\n  getRole() {\n    for(let role of this.roles) {\n      if(role === 'ADMIN') {\n        return true;\n      }\n      return false;\n    }\n  }\n  logout() {\n    this.userService.logout()\n      .subscribe((data: any) => {\n        this.router.navigate(['/login']);\n      });\n  }\n  updateUser() {\n    this.user.username = this.username;\n    this.user.firstName = this.firstName;\n    this.user.lastName = this.lastName;\n    this.user.email = this.email;\n    this.userService.updateUser(this.userId, this.user)\n      .subscribe(\n        (data: User) => {\n          this.router.navigate(['/user', this.userId]);\n        }\n      );\n  }\n\n  deleteUser() {\n    this.userService.deleteUser(this.userId)\n      .subscribe(\n        (data: any) => {\n          this.router.navigate(['/login']);\n        }\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/user/profile/profile.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/user/register/register.component.css\n// module id = ../../../../../src/app/components/user/register/register.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"container\\\">\\n\\n  <div *ngIf=\\\"errorFlag\\\"\\n       class=\\\"alert alert-danger\\\">\\n    {{errorMsg}}\\n  </div>\\n\\n  <h1>Register</h1>\\n  <form (ngSubmit) = \\\"register()\\\" #f=\\\"ngForm\\\">\\n\\n    <input placeholder=\\\"username\\\"\\n           name=\\\"username\\\"\\n           type=\\\"text\\\"\\n           class=\\\"form-control\\\"\\n           ngModel\\n           required\\n           #username=\\\"ngModel\\\"/>\\n\\n    <span class=\\\"help-block\\\" *ngIf=\\\"!username.valid && username.touched\\\">Please enter username!</span>\\n\\n    <input name=\\\"password\\\"\\n           placeholder=\\\"password\\\"\\n           type=\\\"password\\\"\\n           class=\\\"form-control\\\"\\n           ngModel\\n           required\\n           #password=\\\"ngModel\\\"/>\\n    <span class=\\\"help-block\\\" *ngIf=\\\"!password.valid && password.touched\\\">Please enter password!</span>\\n\\n\\n    <input name = \\\"verifyPassword\\\"\\n           placeholder=\\\"verify password\\\"\\n           type=\\\"password\\\"\\n           class=\\\"form-control\\\"\\n           ngModel\\n           required\\n           #verifyPassword=\\\"ngModel\\\"/>\\n    <span class=\\\"help-block\\\" *ngIf=\\\"!verifyPassword.valid && verifyPassword.touched\\\">Please verify password!</span>\\n\\n    <button class=\\\"btn btn-primary btn-block\\\"\\n            type=\\\"submit\\\"\\n            [disabled]=\\\"!f.valid\\\">Register</button>\\n\\n\\n    <button class=\\\"btn btn-danger btn-block\\\"\\n            type=\\\"button\\\"\\n            (click)=\\\"cancel()\\\">Cancel</button>\\n\\n  </form>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/user/register/register.component.html\n// module id = ../../../../../src/app/components/user/register/register.component.html\n// module chunks = main","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {UserService} from '../../../services/user.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/Rx';\nimport {NgForm} from '@angular/forms';\nimport {SharedService} from '../../../services/shared.service.client';\nimport {User} from '../../model/user.model.client';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @ViewChild('f') registerForm: NgForm;\n  userId: String;\n  user: User;\n  username: String;\n  firstName: String;\n  lastName: String;\n  password: String;\n  verifyPassword: String;\n  email: String;\n  errorFlag: boolean;\n  errorMsg = 'Password does not match';\n  alreadyExistsFlag: boolean;\n  alreadyExistsMsg = 'User already exists';\n\n  constructor(\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private sharedService: SharedService) { }\n\n  ngOnInit() {\n  }\n\n  register() {\n    this.errorFlag = false;\n    this.username = this.registerForm.value.username;\n    this.password = this.registerForm.value.password;\n    this.verifyPassword = this.registerForm.value.verifyPassword;\n    if (this.password !== this.verifyPassword) {\n      this.errorFlag = true;\n      return;\n    }\n    this.userService\n      .register(this.username, this.password)\n      .subscribe((user) => {\n        this.sharedService.user = user;\n        this.router.navigate(['/user', user._id]);\n      });\n  }\n\n  cancel() {\n    this.router.navigate(['/login']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/user/register/register.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/wallet-list/wallet-list.component.css\n// module id = ../../../../../src/app/components/wallet-list/wallet-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <nav class=\\\"navbar navbar-custom navbar-fixed-top\\\">\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-sm-1 col-md-1 col-lg-1\\\">\\n        <a [routerLink]=\\\"['/user', userId]\\\"\\n           class=\\\"pull-left my-white-color navbar-brand\\\">\\n          <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n        </a>\\n      </div>\\n\\n      <div class=\\\"navbar-brand my-white-color col-sm-2 col-md-2 col-lg-2\\n        hidden-xs hidden-sm\\\">\\n        MassivX\\n      </div>\\n\\n      <div class=\\\"navbar-brand col-sm-5 col-md-5 col-lg-5\\\">\\n        <a [routerLink]=\\\"['/user', userId,'/createwallet']\\\"\\n           class=\\\"btn btn-danger pull-right my-white-color\\\">\\n          Create Wallet\\n        </a>\\n      </div>\\n\\n      <div class=\\\"navbar-brand my-white-color col-sm-3 col-md-3 col-lg-3\\\">\\n        <a [routerLink]=\\\"['/user', userId,'/wallet']\\\"\\n           class=\\\"btn btn-danger pull-right my-white-color\\\">\\n          My Wallets\\n        </a>\\n      </div>\\n\\n    </div>\\n  </nav>\\n\\n\\n  <div class=\\\"my-container row\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li *ngFor=\\\"let wallet of wallets\\\"\\n          class=\\\"list-group-custom-item\\\">\\n        <div>\\n          <label>Wallet Address</label>\\n          {{wallet['address']}}\\n          <br>\\n          <label>Private Key</label>\\n          {{wallet['privateKey']}}\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <nav class=\\\"navbar navbar-custom navbar-fixed-bottom\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <p class=\\\"navbar-text pull-right\\\">\\n        <a [routerLink]=\\\"['/user', userId, 'profile']\\\">\\n          <span class=\\\"glyphicon glyphicon-user my-white-color\\\"></span>\\n        </a>\\n      </p>\\n    </div>\\n  </nav>\\n\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/wallet-list/wallet-list.component.html\n// module id = ../../../../../src/app/components/wallet-list/wallet-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {WalletService} from \"../../services/wallet.service.client\";\n\n@Component({\n  selector: 'app-wallet-list',\n  templateUrl: './wallet-list.component.html',\n  styleUrls: ['./wallet-list.component.css']\n})\nexport class WalletListComponent implements OnInit {\n\n  userId: String;\n  walletId: String;\n  wallets: any[];\n  constructor(private walletService: WalletService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['userId']) {\n        this.userId = params['userId'];\n      }\n    });\n    this.findWalletsByUserId();\n  }\n\n  findWalletsByUserId() {\n    this.walletService.findWalletsByUser(this.userId)\n      .subscribe(\n        (data: any) => {\n          this.wallets = data;\n        }\n      );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/wallet-list/wallet-list.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/wallet/wallet.component.css\n// module id = ../../../../../src/app/components/wallet/wallet.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n\\n  <nav class=\\\"navbar navbar-custom navbar-fixed-top\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-1 col-md-1 col-lg-1\\\">\\n        <a [routerLink]=\\\"['/user', userId]\\\"\\n           class=\\\"navbar-brand pull-left my-white-color\\\">\\n          <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n        </a>\\n      </div>\\n\\n      <div class=\\\"navbar-brand my-white-color col-sm-11 col-md-11 col-lg-11\\\">\\n        Create Wallet\\n      </div>\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"my-container\\\">\\n    <div class=\\\"row input-group\\\">\\n      <input [(ngModel)]=\\\"searchText\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             name=\\\"searchText\\\"\\n             placeholder=\\\"Enter a phrase using alphabets\\\"\\n             autofocus>\\n\\n      <span class=\\\"input-group-btn\\\">\\n         <a type=\\\"button\\\"\\n            (click)=\\\"createWallet()\\\"\\n            class=\\\"btn btn-default\\\">\\n             <span class=\\\"glyphicon glyphicon-ok\\\"></span>\\n         </a>\\n      </span>\\n    </div>\\n    <div class=\\\"my-container row\\\" *ngIf=\\\"address\\\">\\n      <br>\\n      <label>Address</label>\\n      <span>{{address}}</span>\\n      <br>\\n      <label>Private key</label>\\n      <span>{{privatekey}}</span>\\n    </div>\\n\\n    <nav class=\\\"navbar navbar-custom navbar-fixed-bottom\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <p class=\\\"navbar-text pull-right\\\">\\n          <a [routerLink]=\\\"['/profile']\\\">\\n            <span class=\\\"glyphicon glyphicon-user my-white-color\\\"></span>\\n          </a>\\n        </p>\\n\\n      </div>\\n    </nav>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/wallet/wallet.component.html\n// module id = ../../../../../src/app/components/wallet/wallet.component.html\n// module chunks = main","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {WalletService} from '../../services/wallet.service.client';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.component.html',\n  styleUrls: ['./wallet.component.css']\n})\nexport class WalletComponent implements OnInit {\n\n  searchText: String;\n  address: any;\n  userId: String;\n  privatekey: any;\n  errorFlag: boolean;\n  constructor( private walletService: WalletService,\n               private route: ActivatedRoute,\n               private router: Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['userId']) {\n        this.userId = params['userId'];\n      }\n    });\n  }\n\n  createWallet() {\n    // this.searchText = this.walletForm.value.searchText;\n    if (this.searchText === '') {\n      this.errorFlag = true;\n      return;\n    } else {\n      this.walletService\n        .createWallet(this.userId, this.searchText)\n        .subscribe((data) => {\n          this.address = data.address;\n          this.privatekey = data.privateKey;\n          console.log(data);\n          this.router.navigate(['/user', this.userId, 'wallet']);\n        });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/wallet/wallet.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/website/website-list/website-list.component.css\n// module id = ../../../../../src/app/components/website/website-list/website-list.component.css\n// module chunks = main","module.exports = \"<h1>Websites</h1>\\n\\n{{websites.length}}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/website/website-list/website-list.component.html\n// module id = ../../../../../src/app/components/website/website-list/website-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {Website} from '../../../models/website/website.model.client';\nimport {WebsiteService} from '../../../services/website.service.client';\n\n@Component({\n  selector: 'app-website-list',\n  templateUrl: './website-list.component.html',\n  styleUrls: ['./website-list.component.css']\n})\nexport class WebsiteListComponent implements OnInit {\n  websites: Website[] = [];\n  constructor(private websiteService: WebsiteService) { }\n\n  ngOnInit() {\n    this.websites = this.websiteService.findAllWebsites();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/components/website/website-list/website-list.component.ts","import {Injectable} from '@angular/core';\nimport {CanActivate} from '@angular/router';\nimport {UserService} from './user.service.client';\n\n@Injectable()\nexport class AdminServiceClient implements CanActivate {\n  constructor(private userService: UserService) {}\n  canActivate() {\n    return this.userService.isAdmin();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/services/admin.service.client.ts","import {Injectable} from '@angular/core';\nimport {CanActivate} from '@angular/router';\nimport {UserService} from './user.service.client';\n\n@Injectable()\nexport class AuthenticationService implements CanActivate {\n  constructor(private userService: UserService) {\n\n  }\n  canActivate() {\n    return this.userService.loggedIn();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/services/authentication.service.client.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\n\n@Injectable()\nexport class BittrexService {\n  result: any;\n\n  urlBase = 'https://min-api.cryptocompare.com/data/pricemulti?fsyms=TEXT&tsyms=INR,USD';\n  constructor(private http: Http) {\n\n  }\n\n  getPrices(searchText: any) {\n    const url = this.urlBase\n      .replace('TEXT', searchText);\n    return this.http.get(url)\n      .map(result =>\n        this.result = result.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/services/bittrex.service.client.ts","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class SharedService {\n  user: {};\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/services/shared.service.client.ts","import {Injectable} from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport 'rxjs/Rx';\nimport {environment} from '../../environments/environment';\n@Injectable()\n\nexport class TestService {\n\n\n  baseUrl = environment.baseUrl;\n\n  constructor(private _http: Http) {\n  }\n\n  findAllMessages() {\n    console.log(this.baseUrl);\n    return this._http.get(this.baseUrl + '/api/test')\n      .map(\n        (res: Response) => {\n          const data = res.json();\n          return data;\n        }\n      );\n  }\n  createMessage(message) {\n    const obj = {\n      message: message\n    };\n    return this._http.post(this.baseUrl + '/api/test', obj)\n      .map(\n        (res: Response) => {\n          const data = res.json();\n          return data;\n        }\n      );\n  }\n  deleteMessage(messageId) {\n    return this._http.delete(this.baseUrl + '/api/test/' + messageId)\n      .map(\n        (res: Response) => {\n          const data = res.json();\n          return data;\n        }\n      );\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/services/test.service.client.ts","import {Injectable} from '@angular/core';\nimport {Todo} from '../todo-list/todo2';\nimport {TODOS} from '../todo-list/todo-mock';\nimport {Http, Response} from '@angular/http';\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class TodoService {\n  todos: Todo[] = TODOS;\n  // findAllTodos(): Todo[] {\n  findAllTodos() {\n    console.log('findAllTodos');\n    return this.http.get('http://localhost:3100/api/todo')\n      .map(\n        (res: Response) => {\n          const data = res.json();\n          return data;\n        }\n      );\n    // return this.todos;\n  }\n  createTodo(todo: Todo) {\n    const todoCopy = { ...todo };\n    this.todos.push(todoCopy);\n    return this.http.post('http://localhost:3100/api/todo', todo)\n      .map(\n        (res: Response) => {\n          return res.json();\n      });\n  }\n  deleteTodo(index: number): void {\n    this.todos.splice(index, 1);\n  }\n  constructor(private http: Http) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/services/todo.service.client.ts","import {Injectable} from '@angular/core';\nimport { Http, RequestOptions, Response } from '@angular/http';\nimport 'rxjs/Rx';\nimport { environment } from '../../environments/environment';\nimport {Router} from '@angular/router';\nimport {Observable} from 'rxjs/Observable';\nimport {SharedService} from './shared.service.client';\n\n// injecting service into module\n@Injectable()\nexport class UserService {\n\n  newUrl = environment.baseUrl;\n  constructor(private http: Http,\n              private sharedService: SharedService,\n              private router: Router) {\n\n  }\n  /* api = {\n     'createUser'   : this.createUser,\n     'findUserById' : this.findUserById\n   };\n */\n\n  options: RequestOptions = new RequestOptions();\n\n  login(username: String, password: String) {\n\n    this.options.withCredentials = true; // jga\n\n    const body = {\n      username : username,\n      password : password\n    };\n    return this.http.post(this.newUrl + '/api/login', body, this.options)\n      .map(\n        (res: Response) => {\n          const data = res.json();\n          return data;\n        }\n      );\n  }\n\n  logout() {\n    this.options.withCredentials = true;\n    return this.http.post(this.newUrl + '/api/logout', '', this.options)\n      .map(\n        (res: Response) => {\n          const data = res;\n          return data;\n        }\n      );\n  }\n\n  loggedIn() {\n    this.options.withCredentials = true;\n    return this.http.post(this.newUrl + '/api/loggedIn', '', this.options)\n      .map(\n        (res: Response) => {\n          const user = res.json();\n          if (user !== 0) {\n            this.sharedService.user = user;\n            return true;\n          } else {\n            this.router.navigate(['/login']);\n            return false;\n          }\n        }\n      );\n  }\n\n  register(username, password) {\n    const url = this.newUrl + '/api/register';\n    const credentials = {\n      username: username,\n      password: password\n    };\n    this.options.withCredentials = true;\n    return this.http.post(url, credentials, this.options)\n      .map((response: Response) => {\n        return response.json();\n      });\n  }\n\n  findUserByCredentials(username: String, password: String): Observable<any> {\n    const url = this.newUrl + '/api/user?username=' + username + '&password=' + password;\n    return this.http.get(url)\n      .map(\n        (response: Response) => {\n          return response.json();\n        }\n      );\n  }\n  createUser(user: any) {\n    const url = this.newUrl + '/api/user/';\n    return this.http.post(url, user)\n      .map(\n        (response: Response) => {\n          return response.json();\n        }\n      );\n  }\n\n  createNewUser(userId, user: any) {\n    const url = this.newUrl + '/api/user/' + userId + '/admin/newuser';\n    return this.http.post(url, user)\n      .map(\n        (response: Response) => {\n          return response.json();\n        }\n      );\n  }\n\n  findUserById(userId: String) {\n    const url = this.newUrl + '/api/user/' + userId;\n    return this.http.get(url)\n      .map(\n        (response: Response) => {\n          return response.json();\n        }\n      );\n  }\n\n  updateUser(userId: String, user: any) {\n    const url = this.newUrl + '/api/user/' + userId;\n    return this.http.put(url, user)\n      .map(\n        (response: Response) => {\n          return response.json();\n        }\n      );\n  }\n\n  updateExUser(exuserId: String, userId: String, user: any) {\n    const url = this.newUrl + '/api/user/' + userId + '/admin/updateuser/' + exuserId + '/profile';\n    return this.http.put(url, user)\n      .map(\n        (response: Response) => {\n          return response.json();\n        }\n      );\n  }\n\n  deleteUser(userId: String) {\n    const url = this.newUrl + '/api/user/' + userId;\n    return this.http.delete(url)\n      .map(\n        (response: Response) => {\n          return response.json();\n        }\n      );\n  }\n\n  deleteExUser(exuserId: String, userId: String) {\n    const url = this.newUrl + '/api/user/' + userId + '/admin/updateuser/' + exuserId + '/profile';\n    return this.http.delete(url)\n      .map(\n        (response: Response) => {\n          return response.json();\n        }\n      );\n  }\n\n  findUserByUsername(username: String) {\n    const url = this.newUrl + '/api/user?username/' + username;\n    return this.http.get(url)\n      .map(\n        (response: Response) => {\n          return response.json();\n        }\n      );\n  }\n\n  findAllUsers(userId: String) {\n    const url = this.newUrl + '/api/user/' + userId + '/admin/user';\n    this.options.withCredentials = true;\n    return this.http.get(url, this.options)\n      .map((res: Response) => {\n        return res.json();\n      });\n  }\n\n  isAdmin() {\n    const url = this.newUrl + '/api/admin/isAdmin';\n    this.options.withCredentials = true;\n    return this.http.get(url, this.options)\n      .map((res: Response) => {\n        const user = res.json();\n        if (user !== 0) {\n          this.sharedService.user = user;\n          return true;\n        } else {\n          this.router.navigate(['/login']); return false;\n        }\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/services/user.service.client.ts","import {Injectable} from '@angular/core';\nimport { Http, RequestOptions, Response } from '@angular/http';\nimport {Router} from '@angular/router';\nimport 'rxjs/Rx';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class WalletService {\n  newUrl = environment.baseUrl;\n  constructor(private http: Http,\n              private router: Router) {\n  }\n\n  createWallet(userId: String, data: any) {\n    const obj = {\n      searchText: data\n    };\n    const url = this.newUrl + '/api/user/' + userId +'/createwallet';\n    return this.http.post(url, obj)\n      .map(\n        (response: Response) => {\n          return response.json();\n        }\n      );\n  }\n\n  findWalletsByUser(userId: String) {\n    const url = this.newUrl + '/api/user/' + userId + '/wallet';\n    return this.http.get(url)\n      .map((response: Response) => {\n        return response.json();\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/services/wallet.service.client.ts","\nexport const WEBSITES = [\n  {_id: '123', name: 'Facebook', description: 'description 123'},\n  {_id: '234', name: 'Twitter', description: 'description 234'},\n  {_id: '345', name: 'Wikipedia', description: 'description 345'}\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/services/website.mock.client.ts","import {Website} from '../models/website/website.model.client';\nimport {WEBSITES} from './website.mock.client';\n\nexport class WebsiteService {\n  websites: Website[] = WEBSITES;\n  findAllWebsites() {\n    return this.websites;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/services/website.service.client.ts","module.exports = \"<h2>Edit Todo</h2>\\n<label for=\\\"title\\\">Title</label>\\n<input [(ngModel)]=\\\"todo.title\\\"\\n       class=\\\"form-control\\\"\\n       id=\\\"title\\\">\\n<br/>\\n<label for=\\\"description\\\">\\n  Description</label>\\n<textarea [(ngModel)]=\\\"todo.description\\\"\\n          class=\\\"form-control\\\"\\n          id=\\\"description\\\"></textarea>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/todo-list/todo-edit.component.html\n// module id = ../../../../../src/app/todo-list/todo-edit.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { Todo } from './todo2';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'app-todo-edit',\n  templateUrl: 'todo-edit.component.html'\n})\nexport class TodoEditComponent {\n  @Input() todo: Todo;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/todo-list/todo-edit.component.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-5\\\">\\n      <h1>Todo List</h1>\\n      <div class=\\\"input-group\\\">\\n        <input placeholder=\\\"Todo Title\\\"\\n               [(ngModel)]=\\\"newTodo.title\\\"\\n               class=\\\"form-control\\\">\\n        <span class=\\\"input-group-btn\\\">\\n    <button (click)=\\\"onAddTodo(newTodo)\\\"\\n            class=\\\"btn btn-default\\\">\\n       Add\\n    </button>\\n  </span>\\n      </div>\\n\\n      <ul class=\\\"list-group\\\">\\n        <li *ngFor=\\\"let todo of todos; let i = index\\\"\\n            [class.selected]=\\\"todo === selectedTodo\\\"\\n            class=\\\"list-group-item\\\">\\n          {{todo.title}}\\n          <a class=\\\"pull-right\\\"\\n             (click)=\\\"onSelectTodo(todo)\\\">\\n        <span class=\\\"glyphicon glyphicon-cog\\\">\\n        </span>\\n          </a>\\n          <a class=\\\"pull-right\\\"\\n             (click)=\\\"onDeleteTodo(i)\\\">\\n        <span class=\\\"glyphicon\\n           glyphicon-remove\\\"></span>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-xs-7\\\">\\n      <app-todo-edit [todo]=\\\"selectedTodo\\\"\\n                     *ngIf=\\\"selectedTodo\\\">\\n      </app-todo-edit>\\n    </div>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/todo-list/todo-list.component.html\n// module id = ../../../../../src/app/todo-list/todo-list.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport { Todo } from './todo2';\nimport { TODOS } from './todo-mock';\nimport {TodoService} from '../services/todo.service.client';\n\n@Component({\n  selector: 'app-todo-list',\n  styles: [\n    `.selected {\n     background-color: lightblue;\n   }`\n  ],\n  templateUrl: './todo-list.component.html'\n})\nexport class TodoListComponent implements OnInit {\n  todos: Todo[] = [];\n  newTodo: Todo = new Todo();\n  selectedTodo: Todo;\n  onSelectTodo(todo: Todo) {\n    this.selectedTodo = todo;\n  }\n  onAddTodo(todo: Todo): void {\n    this.todoService.createTodo(todo)\n      .subscribe(\n        (todos: Todo[]) => {\n          this.todos = todos;\n        }\n      );\n  }\n  onDeleteTodo(index: number): void {\n    this.todoService.deleteTodo(index);\n  }\n  constructor(private todoService: TodoService) {}\n  ngOnInit() {\n    // this.todos = this.todoService.findAllTodos();\n    this.todoService.findAllTodos()\n      .subscribe(\n        (todos: Todo[]) => {\n          this.todos = todos;\n        }\n      );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/todo-list/todo-list.component.ts","import { Todo } from './todo2';\nexport const TODOS: Todo[] = [\n  {title: 'Pickup milk', description: 'Skim milk'},\n  {title: 'Pickup kids', description: 'From school'},\n  {title: 'Finish homework', description: 'Math'}\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/todo-list/todo-mock.ts","export class Todo {\n  title: string;\n  description: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/todo-list/todo2.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/todo/todo.component.css\n// module id = ../../../../../src/app/todo/todo.component.css\n// module chunks = main","module.exports = \"<input [(ngModel)]=\\\"title\\\"/>\\n<br/>\\n<textarea [(ngModel)]=\\\"description\\\"></textarea>\\n<br/>\\n<button (click)=\\\"addTodo()\\\">Add</button>\\n\\n<ul>\\n  <li *ngFor=\\\"let todo of todos\\\">\\n    {{todo.title}}\\n    <span (click)=\\\"deleteTodo(todo)\\\">X</span>\\n  </li>\\n</ul>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/swativish/neu/project/massivx-exchange/src/app/todo/todo.component.html\n// module id = ../../../../../src/app/todo/todo.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Todo } from './todo';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  title: String;\n  description: String;\n  todos: Todo[] = [];\n\n  addTodo = function () {\n    const todo = new Todo(this.title, this.description);\n    this.todos.push(todo);\n  };\n\n  deleteTodo = function (todo) {\n    const index = this.todos.indexOf(todo);\n    this.todos.splice(index, 1);\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/todo/todo.component.ts","export class Todo {\n  title: String;\n  description: String;\n  constructor(title, description) {\n    this.title = title;\n    this.description = description;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/app/todo/todo.ts","export const environment = {\n  production: true,\n  baseUrl : ''\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/swativish/neu/project/massivx-exchange/src/main.ts"],"sourceRoot":"webpack:///"}